defaults: &defaults
    working_directory: ~/outcome-service
    docker:
        - image: cyber4all/circleci-aws:docker-git
orbs:
  docker: circleci/docker@1.4.0
  aws-cli: circleci/aws-cli@1.2.1
  node: circleci/node@1.1.6
commands:
  install-aws: aws-cli/install
  setup-aws-cli: aws-cli/setup
version: 2.1
jobs:
    build:
        executor:
            name: node/default
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Build Image
                command: | 
                    docker build -t outcome-service:$CIRCLE_SHA1 .
            - run: 
                name: Login to docker
                command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
            - run:
                name: Publish Image 
                command: |
                    docker tag outcome-service:$CIRCLE_SHA1 "${DOCKER_USER_ORG}/outcome-service:${CIRCLE_SHA1}"
                    docker push "${DOCKER_USER_ORG}/outcome-service:${CIRCLE_SHA1}"
            - persist_to_workspace: 
                root: ./
                paths: 
                    - ./package.json
                    - ./deploy.sh
    run-functional-tests:
        executor:
            name: node/default
        steps:
            - checkout
            - setup_remote_docker
            - run:
                name: Run Functional Test Suite
                command: | 
                    docker-compose -f docker-compose.functional-tests.yml up

    deploy-production:
        <<: *defaults
        steps:
            - attach_workspace: 
                at: ~/outcome-service
            - setup_remote_docker
            - setup-aws-cli:
                aws-access-key-id: MACHINE_AWS_ECS_AccessKey
                aws-region: AWS_REGION_N_VA
                aws-secret-access-key: MACHINE_AWS_ECS_SecretKey
                version: "1"
            - run:
                name: Login to docker
                command: docker login -u "${DOCKER_USERNAME}" -p "${DOCKER_PASSWORD}"
            - run:
                name: Pull Image
                command: docker pull "${DOCKER_USER_ORG}/outcome-service:${CIRCLE_SHA1}"
            - run:
                name: Publish Image 
                command: |
                    export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
                    docker tag "${DOCKER_USER_ORG}/outcome-service:${CIRCLE_SHA1}" "${DOCKER_USER_ORG}/outcome-service:${SEMVER}"
                    docker push "${DOCKER_USER_ORG}/outcome-service:${SEMVER}"
            - run:
                name: Deploy to ECS
                command: |
                    export SEMVER=$(cat ./package.json | grep version | head -1 | awk -F= "{ print $2 }" | sed 's/[version:,\",]//g' | tr -d '[[:space:]]')
                    export DOCKER_IMAGE="${DOCKER_USER_ORG}/outcome-service:${SEMVER}"
                    chmod +x ./deploy.sh
                    sh ./deploy.sh
workflows:
    build-and-test:
        jobs:
            - build:
                context:
                    - DockerHub
                filters:
                    branches:
                        ignore: /master/

    build-test-deploy: 
        jobs: 
            - build:
                context:
                    - DockerHub
                filters:
                    branches:
                        only: /master/
            - deploy-production:
                requires: 
                    - build
                context:
                    - DockerHub
                    - AWS
                filters:
                    branches:
                        only: /master/ 

                


    
